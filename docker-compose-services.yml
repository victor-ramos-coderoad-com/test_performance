version: "2.3"
services:

  mosquitto:
    image: ${MQTT}
    ports:
      - 1883:1883
      - 18083:18083
    restart: always
    hostname: mosquitto
    container_name: mosquitto
    environment:
      - EMQ_MQTT__CLIENT__ENABLE_STATS=on
      - EMQ_MQTT__SESSION__ENABLE_STATS=on
      - EMQ_MQTT__MAX_PACKET_SIZE=512000KB
      #- EMQ_MQTT__SESSION__MAX_INFLIGHT=0
      - EMQ_MQTT__CLIENT__IDLE_TIMEOUT=120s
    #cpu_count: 1
    #mem_reservation: 256m
    #mem_limit: 1g

  hazelcast:
    restart: always
    hostname: hazelcast
    container_name: hazelcast
    #cpu_count: 1
    #mem_reservation: 512m
    #mem_limit: 1g
    image: ${HAZELCAST}
    environment:
      MEM_XMS: 768m
      MEM_XMX: 1g
      VIZIX_HAZELCAST_PUBLIC_ADDRESS: hazelcast
      VIZIX_HAZELCAST_MEMBER_LIST: hazelcast
    ports:
      - "5701:5701"
      - "5702:5702"
      - "5703:5703"

  services:
    restart: always
    depends_on:
      - mosquitto
      - hazelcast
    hostname: services
    container_name: services
    #mem_reservation: 4g
    image: ${SERVICES}
    environment:
      - MEM_XMS=2g
      - MEM_XMX=4g
      - VIZIX_MONGO_PRIMARY=10.0.132.245:27017
      - VIZIX_MONGO_DB=${VIZIX_MONGO_DB}
      - VIZIX_MONGO_USERNAME=${VIZIX_MONGO_USERNAME}
      - VIZIX_MONGO_PASSWORD=${VIZIX_MONGO_PASSWORD}
      - VIZIX_MQTT_HOST=mosquitto
      - VIZIX_CONNECTION_URL=jdbc:mysql://10.0.132.245:3306/${VIZIX_DB_DATABASE}?useSSL=false
      - VIZIX_DB_SCHEMA=${VIZIX_DB_DATABASE}
      - VIZIX_DB_DRIVER=com.mysql.jdbc.Driver
      - VIZIX_DB_DIALECT=org.hibernate.dialect.MySQLDialect
      - VIZIX_DB_PASSWORD=${VIZIX_DB_PASSWORD}
      - VIZIX_HAZELCAST_DISTRIBUTED_ENABLE=true
      - VIZIX_HAZELCAST_NATIVE_CLIENT_ADDRESS=hazelcast
      - VIZIX_AUTHENTICATION_MODE=nativeAuthentication
      - VIZIX_BROKER_CONNECTION_WAIT=false
      - VIZIX_KAFKA_ENABLED=true
      - VIZIX_KAFKA_ZOOKEEPER=$ZOOKEEPER_SERVERS
      - VIZIX_KAFKA_SERVERS=$KAFKA_SERVERS
    volumes:
      - ./endorsed:/usr/local/tomcat/endorsed
    ports:
      - 8080:8080

  ui:
    image: ${UI}
    restart: always
    hostname: ui
    container_name: ui
    #cpu_count: 1
    #mem_reservation: 768m
    #mem_limit: 1g
    environment:
      VIZIX_API_HOST: 107.23.2.116:8080
      VIZIX_API_SECURE: 0
    ports:
      - 80:80
  tb:
    image: ${BRIDGES}
    environment:
      VIZIX_BRIDGE_TYPE: transformbridge
      VIZIX_KAFKA_SERVERS: $KAFKA_SERVERS
    volumes:
      - ./data/tb:/var/vizix

  hb:
    image: ${BRIDGES}
    ports:
      - "9090:8080"
    environment:
      VIZIX_BRIDGE_TYPE: httpbridge
      VIZIX_KAFKA_SERVERS: $KAFKA_SERVERS
    volumes: 
      - ./data/hb:/var/vizix

  cbr:
    image: ${BRIDGES}
    entrypoint:
       - /bin/sh
    hostname: console
    stdin_open: true
    tty: true


  tb1:
    image: ${BRIDGES}
    environment:
      VIZIX_BRIDGE_TYPE: transformbridge
      VIZIX_KAFKA_SERVERS: $KAFKA_SERVERS
    volumes:
      - ./data/tb1:/var/vizix


  datadog:
    restart: always
    image: datadog/docker-dd-agent:12.4.5190
    hostname: datadog
    container_name: datadog
    environment:
      API_KEY: 5dfd1422b74a1c79b13980c621df73af
      SD_BACKEND: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /opt/vizix/dd/:/conf.d/d
